from flask import Flask, request, jsonify
from flask_cors import CORS

from dotenv import load_dotenv
import os

import requests

load_dotenv()

AV_API_KEY = os.getenv('ALPHA_VANTAGE_API_KEY')
AV_CURRENT_RATE_PATH = 'https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&'
AV_HISTORICAL_RATES_PATH = 'https://www.alphavantage.co/query?function=FX_DAILY&'

def get_current_rate(from_currency, to_currency):
    try:
        avg_rate = 1.100215

        # url = f'{AV_CURRENT_RATE_PATH }from_currency={from_currency}&to_currency={to_currency}&apikey={AV_API_KEY}'
        # res = requests.get(url)
        # data = res.json()
        # print(data)

        # bid = float(data['Realtime Currency Exchange Rate']['8. Bid Price'])
        # ask = float(data['Realtime Currency Exchange Rate']['9. Ask Price'])
        # avg_rate = (bid + ask) / 2
        
        return avg_rate
    except Exception as e:
        raise

def get_historical_rates(from_currency, to_currency):
    try:
        daily_avgs = {'2024-01-24': 1.12585, '2024-01-25': 1.12425, '2024-01-26': 1.12795, '2024-01-29': 1.12865, '2024-01-30': 1.12875, '2024-01-31': 1.13185, '2024-02-01': 1.1364999999999998, '2024-02-02': 1.13585, '2024-02-05': 1.1407, '2024-02-06': 1.13705, '2024-02-07': 1.1366, '2024-02-08': 1.1415, '2024-02-09': 1.14105, '2024-02-12': 1.1383, '2024-02-13': 1.1406999999999998, '2024-02-14': 1.13925, '2024-02-15': 1.13625, '2024-02-16': 1.13635, '2024-02-19': 1.13425, '2024-02-20': 1.12945, '2024-02-21': 1.12885, '2024-02-22': 1.12975, '2024-02-23': 1.1290499999999999, '2024-02-26': 1.12955, '2024-02-27': 1.1311, '2024-02-28': 1.13155, '2024-02-29': 1.1317499999999998, '2024-03-01': 1.1311, '2024-03-04': 1.1301999999999999, '2024-03-05': 1.1322999999999999, '2024-03-06': 1.1283500000000002, '2024-03-07': 1.1236000000000002, '2024-03-08': 1.1200999999999999, '2024-03-11': 1.12045, '2024-03-12': 1.12055, '2024-03-13': 1.1205500000000002, '2024-03-14': 1.12185, '2024-03-15': 1.1245, '2024-03-18': 1.125, '2024-03-19': 1.1284, '2024-03-20': 1.127, '2024-03-21': 1.12245, '2024-03-22': 1.1276000000000002, '2024-03-25': 1.12615, '2024-03-26': 1.1252499999999999, '2024-03-27': 1.127, '2024-03-28': 1.1298, '2024-03-29': 1.1319, '2024-04-01': 1.1332, '2024-04-02': 1.13265, '2024-04-03': 1.1285500000000002, '2024-04-04': 1.1221, '2024-04-05': 1.1193, '2024-04-08': 1.11635, '2024-04-09': 1.1126, '2024-04-10': 1.11695, '2024-04-11': 1.1194000000000002, '2024-04-12': 1.11995, '2024-04-15': 1.1227999999999998, '2024-04-16': 1.12765, '2024-04-17': 1.1274, '2024-04-18': 1.1282, '2024-04-19': 1.1339, '2024-04-22': 1.13095, '2024-04-23': 1.1296499999999998, '2024-04-24': 1.1245500000000002, '2024-04-25': 1.121, '2024-04-26': 1.12005, '2024-04-29': 1.11635, '2024-04-30': 1.1176, '2024-05-01': 1.11815, '2024-05-02': 1.1147, '2024-05-03': 1.1088, '2024-05-06': 1.10375, '2024-05-07': 1.105, '2024-05-08': 1.1059999999999999, '2024-05-09': 1.10595, '2024-05-10': 1.10595, '2024-05-13': 1.10595, '2024-05-14': 1.10705, '2024-05-15': 1.1014499999999998, '2024-05-16': 1.09845, '2024-05-17': 1.0990000000000002, '2024-05-20': 1.0981999999999998, '2024-05-21': 1.0991, '2024-05-22': 1.101, '2024-05-23': 1.1019, '2024-05-24': 1.1026, '2024-05-27': 1.1024500000000002, '2024-05-28': 1.1005, '2024-05-29': 1.1009, '2024-05-30': 1.10195, '2024-05-31': 1.1016, '2024-06-03': 1.0999500000000002, '2024-06-04': 1.0981999999999998, '2024-06-05': 1.0984, '2024-06-06': 1.097, '2024-06-07': 1.0998, '2024-06-10': 1.1014, '2024-06-11': 1.10025}

        # url = f'{AV_HISTORICAL_RATES_PATH}from_symbol={from_currency}&to_symbol={to_currency}&apikey={AV_API_KEY}'
        # res = requests.get(url)
        # data = res.json()
        # daily_rates = data['Time Series FX (Daily)']

        # daily_avgs = {}
        # for date in sorted(daily_rates.keys()):
        #     high = float(daily_rates[date]['2. high']) 
        #     low = float(daily_rates[date]['3. low'])

        #     avg_rate = (high + low) / 2
        #     daily_avgs[date] = avg_rate

        return daily_avgs
    except Exception as e:
        raise